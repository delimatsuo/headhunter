rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Candidate profiles - read-only for authenticated users
    // Write access only through Cloud Functions
    match /candidates/{candidateId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Embeddings - read-only for authenticated users
    // Write access only through Cloud Functions
    match /embeddings/{embeddingId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Search cache - read-only for authenticated users
    // Write access only through Cloud Functions
    match /search_cache/{cacheId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only Cloud Functions can write
    }
    
    // User search history - private to each user
    match /users/{userId}/search_history/{searchId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if false; // Immutable once created
      allow delete: if isOwner(userId);
    }
    
    // User preferences - private to each user
    match /users/{userId}/preferences/{preferenceId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Job descriptions saved by users
    match /users/{userId}/saved_jobs/{jobId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}